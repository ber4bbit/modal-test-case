{"version":3,"sources":["components/ModalWindow/ModalWindow.js","generalFunctions/validate.js","components/ModalWindowForm/ModalWindowForm.js","App.js","reportWebVitals.js","index.js"],"names":["ModalWindow","active","setActive","children","className","onClick","event","stopPropagation","Button","variant","validate","values","errors","validateEmail","test","String","email","length","firstName","lastName","product","ModalWindowForm","formik","useFormik","initialValues","totalPrice","onSubmit","alert","JSON","stringify","useState","feature1","feature2","state","setState","featureHandleChange","target","name","checked","handleSubmit","TextField","error","touched","helperText","label","margin","fullWidth","onChange","handleChange","value","onBlur","handleBlur","FormControl","InputLabel","Select","id","MenuItem","FormHelperText","style","display","justifyContent","marginTop","Switch","type","App","modalActive","setModalActive","alignItems","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff4c921e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Button} from \"@mui/material\";\r\n\r\nimport './ModalWindow.css';\r\n\r\nexport default function ModalWindow({ active, setActive, children }) {\r\n    return (\r\n        <div className={active ? 'modalContainer active' : 'modalContainer'} onClick={() => setActive(false)}>\r\n            <div className={active ? 'modalContainer__content active' : 'modalContainer__content'} onClick={event => event.stopPropagation()}>\r\n                <Button variant=\"text\" className=\"modalContainer__content-closeBtn\" onClick={() => setActive(false)}>&times;</Button>\r\n                <p className=\"modalContainer__content-header\">Title form</p>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","export const validate = values => {\r\n    const errors = {};\r\n    const reg = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    let validateEmail = reg.test(String(values.email));\r\n    if (!values.email) {\r\n        errors.email = 'Please fill in email.';\r\n    } else if (values.email.length < 5) {\r\n        errors.email = 'Address must be 5 characters or more.';\r\n    } else if (validateEmail === false) {\r\n        errors.email = 'Address must have a normal view.';\r\n    }\r\n\r\n    if (!values.firstName) {\r\n        errors.firstName = 'Please fill in first name.'\r\n    }\r\n\r\n    if (!values.lastName) {\r\n        errors.lastName = 'Please fill in last name.'\r\n    }\r\n\r\n    if (!values.product) {\r\n        errors.product ='Please select product.'\r\n    }\r\n    return errors;\r\n}","import React, {useState} from 'react';\r\nimport {Button, FormControl, FormHelperText} from \"@mui/material\";\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\nimport {useFormik} from \"formik\";\r\nimport {validate} from \"../../generalFunctions/validate\";\r\n\r\nexport default function ModalWindowForm() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            product: '',\r\n            totalPrice: ''\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n        }\r\n    });\r\n\r\n    const [state, setState] = useState({\r\n        feature1: false,\r\n        feature2: false\r\n    });\r\n    const featureHandleChange = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.checked\r\n        })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ formik.handleSubmit }>\r\n            <TextField\r\n                error={formik.touched.firstName && formik.errors.firstName}\r\n                helperText={formik.touched.firstName && formik.errors.firstName ? formik.errors.firstName : false}\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                label=\"First Name *\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                onChange={formik.handleChange}\r\n                value={formik.values.firstName}\r\n                onBlur={formik.handleBlur}/>\r\n            <TextField\r\n                error={formik.touched.lastName && formik.errors.lastName}\r\n                helperText={formik.touched.lastName && formik.errors.lastName ? formik.errors.lastName : false}\r\n                name=\"lastName\"\r\n                variant=\"outlined\"\r\n                label=\"Last Name *\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                onChange={formik.handleChange}\r\n                value={formik.values.lastName}\r\n                onBlur={formik.handleBlur}/>\r\n            <TextField\r\n                error={formik.touched.email && formik.errors.email}\r\n                helperText={formik.touched.email && formik.errors.email ? formik.errors.email : false}\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                label=\"user@gmail.com *\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n                onBlur={formik.handleBlur}/>\r\n            <div className=\"productContainer\">\r\n                <p>Product type * </p>\r\n                <FormControl className=\"productContainer__select\" error={formik.touched.product && formik.errors.product}>\r\n                    <InputLabel className=\"labelText\">Product</InputLabel>\r\n                    <Select name=\"product\" onChange={formik.handleChange} id=\"errorSelect\">\r\n                        <MenuItem value=\"\">None</MenuItem>\r\n                        <MenuItem value={50}>Product $50</MenuItem>\r\n                        <MenuItem value={100}>Product $100</MenuItem>\r\n                        <MenuItem value={300}>Product $300</MenuItem>\r\n                    </Select>\r\n                    {formik.touched.product && formik.errors.product ? <FormHelperText>Please select product type.</FormHelperText> : null}\r\n                </FormControl>\r\n            </div>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                marginTop: '24px'\r\n            }}>\r\n                <p>Additional feature for $100</p>\r\n                <Switch checked={state.feature1} onChange={featureHandleChange} name=\"feature1\"/>\r\n            </div>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n            }}>\r\n                <p>Additional feature for $200</p>\r\n                <Switch checked={state.feature2} onChange={featureHandleChange} name=\"feature2\"/>\r\n            </div>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between'\r\n            }}>\r\n                <p>Total price</p>\r\n                {state.feature1 && state.feature2 ? <p>${formik.values.product + 300}</p>\r\n                    : state.feature1 ? <p>${formik.values.product + 100}</p> : state.feature2\r\n                        ? <p>${formik.values.product + 200}</p> : <p>${formik.values.product + 0}</p>}\r\n            </div>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                marginTop: '24px'\r\n            }}>\r\n                <Button variant=\"contained\" type=\"submit\">Send form</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, {useState} from 'react';\nimport {Button} from \"@mui/material\";\n\nimport ModalWindow from \"./components/ModalWindow/ModalWindow\";\nimport ModalWindowForm from \"./components/ModalWindowForm/ModalWindowForm\";\n\nfunction App() {\n    const [ modalActive, setModalActive ] = useState(false);\n    return (\n        <div style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\"\n        }}>\n            <Button variant=\"contained\" onClick={() => setModalActive(true)}>Click here!</Button>\n            <ModalWindow active={ modalActive } setActive={ setModalActive }>\n                <ModalWindowForm/>\n            </ModalWindow>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}